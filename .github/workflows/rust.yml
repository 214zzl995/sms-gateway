name: Rust

on:
  push:
    tags:
      - "*"
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    # 安装 Node.js 和 pnpm
    - name: Set up Node.js and pnpm
      run: |
        # 安装 Node.js
        curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -
        sudo apt-get install -y nodejs
        
        # 安装 pnpm
        npm install -g pnpm

    # 安装必需的构建工具
    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          make \
          musl-tools \
          libssl-dev \
          git
    
    # 编译 frontend
    - name: Build frontend
      run: |
        cd frontend
        pnpm install
        pnpm run build
    
    # 编译 Rust 项目
    - name: Build Rust Project (default)
      run: cargo build --verbose
    
    # 编译 Release 版本
    - name: Build Release Version
      run: cargo build -r --verbose
    
    # 编译目标为 musl 版本
    - name: Build musl target
      run: cargo build -r --target=x86_64-unknown-linux-musl --verbose
    
    # 运行测试
    - name: Run tests
      run: cargo test --verbose

    # 重命名 musl 构建产物并上传
    - name: Rename musl build artifact
      run: |
        # 重命名 musl 构建产物
        mv target/x86_64-unknown-linux-musl/release/sms-gateway target/x86_64-unknown-linux-musl/release/sms-gateway-musl
        echo "Renamed musl build to sms-gateway-musl"
    
    # 上传构建产物作为 Artifact
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: rust-build-artifacts  # 你上传的 artifact 名称
        path: |
          target/release/sms-gateway  # 默认的构建产物
          target/x86_64-unknown-linux-musl/release/sms-gateway-musl  # 重命名后的 musl 构建产物
        retention-days: 30  # artifact 的保留天数，默认为 90 天
        compression-level: 6  # 压缩级别，0 为不压缩，9 为最佳压缩，6 是默认值
        if-no-files-found: error  # 如果没有找到文件则失败
        overwrite: true  # 如果已有同名 artifact，是否覆盖
        include-hidden-files: false  # 不包括隐藏文件
